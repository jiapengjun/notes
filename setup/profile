set -o vi
export PS1='\h@\[\033[00;32m\]\W\[\033[00m\]:\u \$ '

export HISTCONTROL=ignoreboth
export HISTFILESIZE=2000
export HISTIGNORE='ls:man:pwd:history'

alias ls='ls -GF'
alias ll='ls -l'
alias prthex='printf "%08x\n" '
function prtbin()
{
    for i in $*
    do
        echo "obase=2;$i" |bc
    done
}

alias func='declare -f'
#alias func='typeset -f'
alias ip='curl ipecho.net/plain; echo'

#alias ppj='python -m json.tool'
alias ppj='python -c'"'"'import fileinput, json; print(json.dumps(json.loads("".join(fileinput.input())),sort_keys=True, indent=4, ensure_ascii=False))'"'"''

#alias phs='python3 -m http.server'
alias phs='python -m SimpleHTTPServer'

alias gpl='git pull'
alias gph='git add .; git commit -m"no comments"; git push'
alias glg='git log --oneline --abbrev-commit --all --graph --decorate --color'

function usage()
{
    echo ''
    echo "** ANSI **    : 0[black], 1[red], 2[green], 3[yellow], 4[blue]"
    echo "** ANSI **    : 5[magenta], 6[Cyan], 7[white]"
    echo ''

    echo '** Package ** : brew, port, pip[python], gem[ruby], npm[nodejs]'
    echo '** Tools **   : git, plutil, diskutil, opensnoop'
    echo '** Python **  : easy_install, virtualenv, pyenv, pylint'
    echo '** DNS **     : whois, nslookup, dig'
    echo ''
}

function OSReinstall() {
    /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"

    brew install pstree
    brew install mongodb
    brew install nmap

    brew install mpv
    brew install youtube-dl

    brew install python
        pip install virtualenv
        pip install scrapy

    brew install node --with-full-icu
    brew install swift
    brew install go
    brew install lua

    brew update
    brew upgrade --cleanup
}

function boot()
{
    if [ $# -ne 1 ] ;then
        echo "Input which OS you want to boot [1: El Captian, 2: Fuji]?"
        return
    fi

    if [ $1 -eq 1 ]   ;then
        sudo bless --mount /Volumes/Glitz --setBoot
    elif [ $1 -eq 2 ] ;then
        sudo bless --mount /Volumes/Fuji --setBoot
    else
        echo "Wrong choice, abort!"
        return
    fi

    sudo reboot 
}

function plan()
{
    if [ $# -eq 1 ] && ([ $1 == 'e' ] || [ $1 == '-e' ]) ;then
        vi ~/.bash_profile
        source ~/.bash_profile
    else
        echo -e '\033[00;36m'  # Can use "printf" to replace "echo -e"
        echo 'cancel Unicome service'
        echo -e '\033[00m'
    fi
}

plan
